#!/usr/bin/env python

from __future__ import print_function
__author__ = 'adam'

import argparse
import os
import sys

def parse_shebang(fp):
    ''' Attempt to parse the shebang of a file to determine type. '''
    with open(fp) as f:
        line = f.readline().strip()
    if not line.startswith('#!'):
        return ''
    split = line.split()
    if len(split) > 1:
        return split[-1]
    else:
        return line.split(os.path.sep)[-1]

def parse_extension(fp):
    ''' Print the extension of the file name. '''
    split = fp.split('.')
    if len(split) > 1:
        return split[-1].strip()
    else:
        return ''

def main():
    parser = argparse.ArgumentParser(description='prints the extension of file'
                                     ' names')
    parser.add_argument('-s', '--shebang', help='Use shebang line to determine'
                        ' file type instead of extension.',
                        action='store_true')
    parser.add_argument('-i', '--ignore-empty', help='Do not print empty file'
                        ' types or extensions.', action='store_true',
                        dest='ignore_empty')
    parser.add_argument('files', nargs='*')
    args = parser.parse_args()

    # Determine whether to read from argument list or stdin.
    if len(args.files) > 0:
        files = args.files
    else:
        files = sys.stdin

    for f in files:
        f = f.strip()
        if args.shebang:
            ext = parse_shebang(os.path.abspath(f))
        else:
            ext = parse_extension(f)
        if ext == '' and args.ignore_empty:
            continue
        print(ext)

if __name__ == '__main__':
    main()
